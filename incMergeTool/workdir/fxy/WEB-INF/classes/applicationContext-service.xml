<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd"
	default-lazy-init="true">

	<!-- 设置 @Service 扫描路径, Controller除外 -->
	<context:component-scan base-package="com.cn1win">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 激活对事务标签 @Transactional 的支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 激活对 @AspectJ 标签的支持 -->
	<aop:aspectj-autoproxy />

	<!-- 激活对 @Autowired 标签的支持 -->
	<!-- <context:annotation-config/> -->

	<!-- 定义事务拦截器 -->
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<!-- 为事务拦截器注入一个事务管理器 -->
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<!-- 定时任务由于都是调用接口，因此不使用事务 -->
				<prop key="auto*">PROPAGATION_NEVER</prop>
				<!-- 只读事物 -->
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="list*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="check*">PROPAGATION_REQUIRED,readOnly</prop>
				<!-- 正常事务 -->
				<prop key="*">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property>
	</bean>
	<!-- 定义拦截器要拦截的bean -->
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<!-- 拦截所有名字以Service结尾的bean进行代理 -->
				<value>*Manager</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- 设置定时任务 本地环境要注释掉.-->
	<task:scheduled-tasks scheduler="myScheduler">
	<!--	<task:scheduled ref="sysSchedulerManager" method="autoSendEmail" cron="0 */5 * * * ?" />
		<task:scheduled ref="sysSchedulerManager" method="autoSendSms" cron="0 */5 * * * ?" />
		<task:scheduled ref="sysSchedulerManager" method="autoSendPoShip" cron="0 */5 * * * ?" />-->
		<task:scheduled ref="sysSchedulerManager" method="cancelOrder" cron="0 */5 * * * ?" />
	</task:scheduled-tasks>
	<task:scheduler id="myScheduler" pool-size="10" />
	<task:executor id="myExecutor" pool-size="5" />
	<task:annotation-driven executor="myExecutor" scheduler="myScheduler" />
	<!-- =================================================================== -->
	<!-- 配置邮件发送及Velocity模板信息 -->
	<!-- =================================================================== -->
	<!-- //TODO: 还需根据实际情况配置邮件模板等信息 -->
	<bean id="mailEngine" class="com.cn1win.tjc.service.MailEngine">
		<property name="javaMailSender" ref="javaMailSender" />
		<property name="defaultFrom" value="${mail.default.from}" />
	</bean>

	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}" />
		<property name="defaultEncoding" value="UTF-8" />
		<!-- SMTP 服务验证所需信息 -->
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="javaMailProperties">
			<value>
				mail.smtp.auth=true
			</value>
		</property>
	</bean>

	<!-- 配置邮件发送所需的 Velocity 引擎 -->
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
				<prop key="velocimacro.library"></prop>
			</props>
		</property>
	</bean>

	<bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage" scope="prototype">
		<property name="from" value="${mail.default.from}" />
	</bean>

	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>

	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
		<property name="patterns">
			<list>
				<value>com.cn1win.tjc.dao.*</value>
			</list>
		</property>
	</bean>

	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>
</beans>
